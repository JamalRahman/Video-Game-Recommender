- Build TFIDF Recommender
- Frontend 'x'
- Frontend footer
- TFIDF map
Save cosine sim matrix
   ensure link between matrix and each app

Productionise TF-IDF
   Strongly link TF-IDF vectors and app details
   Model returns similar games to any of the elements, or similar to the inferred mean-vector


Scrape data for images & store description texts

Average TF-IDF and calculate similar games to hypothetical
   Is this calculate cosine of every data point, or use some advanced nearest neighbour search

In TSNE, is there a way to label clusters by general genre
    We don't need ML if we're just clustering by dominant genre
    More that I'm mapping out the general dominating genres in a region?




Frontend:
   Control Dropdown with keeb
   Style 'Tracked Games' list
   Add X button on tracked games
   Add section for recomended games
   

Backend:
   Add TFIDF map
   Collaborative-Based filtering on the players








Doc2Vec embedding of genres, cluster games accordingly
   Select new games that neighbour already-owned/favoured games


Set up TDD using pytest

Set up github actions to auto-test

Implement game recommendation model


https://create-react-app.dev/docs/getting-started/

https://blog.miguelgrinberg.com/post/how-to-create-a-react--flask-project
https://developer.okta.com/blog/2018/12/20/crud-app-with-python-flask-react
https://blog.learningdollars.com/2019/11/29/how-to-serve-a-reactapp-with-a-flask-server/